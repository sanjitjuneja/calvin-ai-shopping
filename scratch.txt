# from langchain.agents import load_tools 
# from langchain. agents import initialize_agent 
# from langchain.agents import AgentType 
# from langchain. memory import ConversationBufferMemory 
# from langchain. chat_models import ChatOpenAI

# memory = ConversationBufferMemory
# llm = ChatOpenAI ()
# tools = load_tools([
#     'wikipedia',
#     '11m-math',
#     'google-search',
#     'python_repl',
#     'wolfram-alpha',
#     'ternubak',
#     'news-api',
#     'podcast-api',
#     'openweathermap-api',
# ],llm=llm)

# agent = initialize_agent(
#     tools,
#     llm, 
#     agent=AgentType.CONVERSATIONAL_REACT_DESCRIPTION, 
#     verbose=True,
#     memory=memory
# )

# agent.run("Chat GPT, how do you feel now?")



# model = ChatOpenAI(temperature=TEMP)
# planner = load_chat_planner(model)
# executor = load_agent_executor(model, tools, verbose=True)
# agent = PlanAndExecute(planner=planner, executor=executor, verbose=True)



# SIDEBAR: MODEL SETTINGS
st.sidebar.progress(0)
with st.sidebar.expander("üß† Model Settings ", expanded=False):
    # MODEL
    MODEL = st.selectbox(
        label="Model",
        options=[
            "gpt-3.5-turbo",
        ],
    )
    # MODEL TEMPERATURE
    TEMP = st.slider(
        "Randomness", min_value=0.0, max_value=1.0, step=0.01, value=0.5, format='%f',
    )

# # SIDEBAR: APP SETTINGS
# with st.sidebar.expander(" üõ†Ô∏è App Settings ", expanded=False):
#     st.text("Settings")




[[pages]]
path = "app.py"
name = "Home"
icon = "üè†"

[[pages]]
path = "pages/calvin_sports.py"
name = "Calvin (Sports)"
icon = "üèÄ"

[[pages]]
path = "pages/felix_productivity.py"
name = "Felix (Producivity)"
icon = "üë®‚Äçüíª"

[[pages]]
path = "pages/oscar_content_creation.py"
name = "Oscar (Content Creation)"
icon = "‚úçÔ∏è"